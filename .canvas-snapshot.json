{
  "quiz": {
    "id": 19076,
    "title": "Active Record Associations Quiz",
    "html_url": "https://learning.flatironschool.com/courses/3299/quizzes/19076",
    "mobile_url": "https://learning.flatironschool.com/courses/3299/quizzes/19076?force_user=1&persist_headless=1",
    "description": "<div id=\"git-data-element\" data-org=\"learn-co-curriculum\" data-repo=\"phase-3-quiz-active-record-associations\"></div>\n<header class=\"fis-header\">\n  <a class=\"fis-git-link\" href=\"https://github.com/learn-co-curriculum/phase-3-quiz-active-record-associations/issues/new\" target=\"_blank\"><img id=\"issue-img\" title=\"Create New Issue\" alt=\"Create New Issue\"></a>\n</header>\n\n<p>It's time to check your knowledge! Use this quiz to create a custom study guide.\nNote any answers that were marked incorrect, so you can study the relevant\nmaterial and try this quiz again.</p>\n\n<p>If you don't know the answer to a question, please do not guess. Instead, select\n\"I don't know\". It's OK not to know everything and to admit when we're unsure.</p>",
    "quiz_type": "assignment",
    "time_limit": null,
    "timer_autosubmit_disabled": false,
    "shuffle_answers": true,
    "show_correct_answers": true,
    "scoring_policy": "keep_highest",
    "allowed_attempts": 3,
    "one_question_at_a_time": true,
    "question_count": 11,
    "points_possible": 11.0,
    "cant_go_back": false,
    "access_code": null,
    "ip_filter": null,
    "due_at": null,
    "lock_at": null,
    "unlock_at": null,
    "published": false,
    "unpublishable": true,
    "locked_for_user": true,
    "lock_info": {
      "missing_permission": "participate_as_student",
      "asset_string": "quizzes:quiz_19076"
    },
    "lock_explanation": "This quiz is currently locked.",
    "hide_results": null,
    "show_correct_answers_at": null,
    "hide_correct_answers_at": null,
    "all_dates": [
      {
        "due_at": null,
        "unlock_at": null,
        "lock_at": null,
        "base": true
      }
    ],
    "can_unpublish": true,
    "can_update": true,
    "require_lockdown_browser": false,
    "require_lockdown_browser_for_results": false,
    "require_lockdown_browser_monitor": false,
    "lockdown_browser_monitor_data": "",
    "speed_grader_url": null,
    "permissions": {
      "manage": true,
      "read": true,
      "create": true,
      "update": true,
      "submit": true,
      "preview": true,
      "delete": true,
      "read_statistics": true,
      "grade": true,
      "review_grades": true,
      "view_answer_audits": true
    },
    "quiz_reports_url": "https://learning.flatironschool.com/api/v1/courses/3299/quizzes/19076/reports",
    "quiz_statistics_url": "https://learning.flatironschool.com/api/v1/courses/3299/quizzes/19076/statistics",
    "message_students_url": "https://learning.flatironschool.com/api/v1/courses/3299/quizzes/19076/submission_users/message",
    "section_count": 1,
    "important_dates": false,
    "quiz_submission_versions_html_url": "https://learning.flatironschool.com/courses/3299/quizzes/19076/submission_versions",
    "assignment_id": 129334,
    "one_time_results": false,
    "only_visible_to_overrides": false,
    "assignment_group_id": 9648,
    "show_correct_answers_last_attempt": true,
    "version_number": 6,
    "has_access_code": false,
    "post_to_sis": false,
    "migration_id": "g22911fec9dc1ffdc72feff6cca25bee1",
    "question_types": [
      "multiple_choice_question"
    ]
  },
  "questions": [
    {
      "quiz_id": 19076,
      "id": 120425,
      "quiz_group_id": null,
      "assessment_question_id": 183453,
      "position": null,
      "question_name": "Active Record Associations: Intro",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Imagine that you are a Pokémon trainer. A Pokémon trainer can carry up to 6\nPokémon at a time, and each Pokémon can only be owned by a single trainer at a\ntime. If you were to have a model for <code>Trainer</code> and a model for <code>Pokemon</code>, what\ntype of relationship would be best to use?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/assignments/133959\">One to Many Associations</a></li></ul><p></p>",
      "answers": [
        {
          "id": 9884,
          "text": "",
          "html": "<p>One-to-many</p>",
          "comments": "",
          "comments_html": "<p>Correct! A Trainer would have many Pokemon, and a Pokemon would belong to a\nsingle Trainer.</p>",
          "weight": 100.0
        },
        {
          "id": 2119,
          "text": "",
          "html": "<p>Many-to-many</p>",
          "comments": "",
          "comments_html": "<p>Not quite. How many Trainers can carry a Pokemon at a time.</p>",
          "weight": 0.0
        },
        {
          "id": 7590,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19076,
      "id": 120427,
      "quiz_group_id": null,
      "assessment_question_id": 183455,
      "position": null,
      "question_name": "Active Record Associations: Intro",
      "question_type": "multiple_choice_question",
      "question_text": "<p>A Pokémon trainer can hone their Pokémons' skills at a gym. A Pokémon trainer\ncan train at multiple gyms and gyms can accept many trainers. What type of\nrelationship would be best to use between <code>Trainer</code> and <code>Gym</code>?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/assignments/134080\">Many to Many Associations</a></li></ul><p></p>",
      "answers": [
        {
          "id": 9302,
          "text": "",
          "html": "<p>Many-to-many</p>",
          "comments": "",
          "comments_html": "<p>Exactly! Many Trainers can train at a gym and Trainers can train at many gyms.</p>",
          "weight": 100.0
        },
        {
          "id": 2756,
          "text": "",
          "html": "<p>One-to-many</p>",
          "comments": "",
          "comments_html": "<p>Not quite. A Trainer can train at multiple gyms and a single gym can accept\nmultiple Trainers.</p>",
          "weight": 0.0
        },
        {
          "id": 1394,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19076,
      "id": 120430,
      "quiz_group_id": null,
      "assessment_question_id": 183461,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_choice_question",
      "question_text": "<p>A Pokedex is a mini-encyclopedia of Pokémon species, types, evolutions, and\nmoves.</p>\n\n<p>True or False: A <code>Pokedex</code> model would have a <code>has_many</code> relationship for\n<code>Pokemon</code>.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/assignments/133959\">One to Many Associations</a></li></ul><p></p>",
      "answers": [
        {
          "id": 2396,
          "text": "",
          "html": "<p>True</p>",
          "comments": "",
          "comments_html": "<p>Exactly! A Pokedex would list many Pokemon.</p>",
          "weight": 100.0
        },
        {
          "id": 7114,
          "text": "",
          "html": "<p>False</p>",
          "comments": "",
          "comments_html": "<p>Not quite. How many Pokemon can a Pokedex list? Can it list one or many?</p>",
          "weight": 0.0
        },
        {
          "id": 547,
          "text": "",
          "html": "<p>I don't know</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19076,
      "id": 120431,
      "quiz_group_id": null,
      "assessment_question_id": 183458,
      "position": null,
      "question_name": "Active Record Associations: Intro",
      "question_type": "multiple_choice_question",
      "question_text": "<p>All Pokémon can learn multiple skills. Given the following class definition:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Pokemon</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span>\n  <span class=\"n\">belongs_to</span> <span class=\"ss\">:trainer</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>What association should be added to the above <code>Pokemon</code> model so that <code>Skill</code>s\ncan be attributed to it?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/assignments/134080\">Many to Many Associations</a></li></ul><p></p>",
      "answers": [
        {
          "id": 5811,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">has_many</span> <span class=\"ss\">:skills</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Correct! There is a direct relationship between Pokemon and Skill, and a Pokemon\nhas many Skills.</p>",
          "weight": 100.0
        },
        {
          "id": 5138,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">belongs_to</span> <span class=\"ss\">:skill</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Not quite. This means that a Pokemon could have only one Skill.</p>",
          "weight": 0.0
        },
        {
          "id": 6787,
          "text": "",
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">has_many</span> <span class=\"ss\">:skills</span><span class=\"p\">,</span> <span class=\"ss\">through: :trainer</span>\n</code></pre></div>",
          "comments": "",
          "comments_html": "<p>Not quite. There is a direct relationship between Pokemon and Skills.</p>",
          "weight": 0.0
        },
        {
          "id": 7471,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19076,
      "id": 149488,
      "quiz_group_id": null,
      "assessment_question_id": 185549,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Say we have an app with <code>Dog</code> and <code>Toy</code> models, where toys belong to dogs and\ndogs have many toys. Which SQL table should contain the foreign key?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/assignments/133959\">One to Many Associations</a></li></ul><p></p>",
      "answers": [
        {
          "id": 2733,
          "text": "",
          "html": "<p><code>toys</code></p>",
          "comments": "",
          "comments_html": "<p>Yes! In our model, toys belong to dogs so the <code>toys</code> table should contain the\n<code>dog_id</code> foreign key.</p>",
          "weight": 100.0
        },
        {
          "id": 1278,
          "text": "",
          "html": "<p><code>dogs</code></p>",
          "comments": "",
          "comments_html": "<p>Not quite! In our model, toys belong to dogs so the <code>toys</code> table should\ncontain the <code>dog_id</code> foreign key.</p>",
          "weight": 0.0
        },
        {
          "id": 6773,
          "text": "",
          "html": "<p>It's necessary to create a join table.</p>",
          "comments": "",
          "comments_html": "<p>This is a one-to-many association, so we don't need a join table.</p>",
          "weight": 0.0
        },
        {
          "id": 6904,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19076,
      "id": 149489,
      "quiz_group_id": null,
      "assessment_question_id": 185550,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_answers_question",
      "question_text": "<p>Say we have an app with <code>Dog</code> and <code>Toy</code> models, where toys belong to dogs and\ndogs have many toys. Which of the following will correctly create a new toy and\nassociate it with the dog with an <code>id</code> of 2?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/assignments/133959\">One to Many Associations</a></li></ul><p></p>",
      "answers": [
        {
          "id": "713",
          "text": "",
          "comments": "",
          "comments_html": "<p>Correct! We can use the <code>dog_id</code> foreign key directly when creating a new toy.</p>",
          "weight": 100.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"no\">Toy</span><span class=\"p\">.</span><span class=\"nf\">create</span><span class=\"p\">(</span><span class=\"ss\">name: </span><span class=\"s2\">\"Squeaky Cheeseburger\"</span><span class=\"p\">,</span> <span class=\"ss\">dog_id: </span><span class=\"mi\">2</span><span class=\"p\">)</span>\n</code></pre></div>"
        },
        {
          "id": "6841",
          "text": "",
          "comments": "",
          "comments_html": "<p>Yes indeed! We can create a new new <code>Toy</code> instance and associate it with the\ncorrect dog by providing a <code>Dog</code> instance, so long as we have the\n<code>belongs_to: :dog</code> method set up in the <code>Toy</code> model.</p>",
          "weight": 100.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">dog</span> <span class=\"o\">=</span> <span class=\"no\">Dog</span><span class=\"p\">.</span><span class=\"nf\">find</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"no\">Toy</span><span class=\"p\">.</span><span class=\"nf\">create</span><span class=\"p\">(</span><span class=\"ss\">name: </span><span class=\"s2\">\"Squeaky Cheeseburger\"</span><span class=\"p\">,</span> <span class=\"ss\">dog: </span><span class=\"n\">dog</span><span class=\"p\">)</span>\n</code></pre></div>"
        },
        {
          "id": "3729",
          "text": "",
          "comments": "",
          "comments_html": "<p>Right! We can create a new new <code>Toy</code> instance and associate it with the correct dog\nby using the shovel operator, so long we have set up the <code>has_many :toys</code>\nmethod on the <code>Dog</code> class.</p>",
          "weight": 100.0,
          "html": "<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"n\">dog</span> <span class=\"o\">=</span> <span class=\"no\">Dog</span><span class=\"p\">.</span><span class=\"nf\">find_by</span><span class=\"p\">(</span><span class=\"ss\">id: </span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">dog</span><span class=\"p\">.</span><span class=\"nf\">toys</span> <span class=\"o\">&lt;&lt;</span> <span class=\"no\">Toy</span><span class=\"p\">.</span><span class=\"nf\">create</span><span class=\"p\">(</span><span class=\"ss\">name: </span><span class=\"s2\">\"Squeaky Cheeseburger\"</span><span class=\"p\">)</span>\n</code></pre></div>"
        },
        {
          "id": "5413",
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "html": "<p>I don't know.</p>"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19076,
      "id": 149490,
      "quiz_group_id": null,
      "assessment_question_id": 185551,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Say we have an app with <code>Doctor</code> and <code>Patient</code> models, where doctors have many\npatients and patients have many doctors. Which SQL table should include the\nforeign key?</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/assignments/134080\">Many to Many Associations</a></li></ul><p></p>",
      "answers": [
        {
          "id": 8396,
          "text": "",
          "html": "<p><code>doctors</code></p>",
          "comments": "",
          "comments_html": "<p>Not quite! What do we need to do to set up a many-to-many association?</p>",
          "weight": 0.0
        },
        {
          "id": 5757,
          "text": "",
          "html": "<p><code>patients</code></p>",
          "comments": "",
          "comments_html": "<p>Not quite! What do we need to do to set up a many-to-many association?</p>",
          "weight": 0.0
        },
        {
          "id": 5199,
          "text": "",
          "html": "<p>It's necessary to create a join table.</p>",
          "comments": "",
          "comments_html": "<p>Yes! This is a many-to-many association, so we'll need to create a join table.</p>",
          "weight": 100.0
        },
        {
          "id": 848,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19076,
      "id": 149491,
      "quiz_group_id": null,
      "assessment_question_id": 185552,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_choice_question",
      "question_text": "<p>Say we have a many-to-many relationship among <code>Doctor</code>, <code>Patient</code> and<br>\n<code>Appointment</code> models, where a doctor has many patients through appointments and\nvice versa.</p>\n\n<p>When setting up the Active Record associations in the <code>Doctor</code> model, we<br>\n<strong>must</strong> specify its relationship with <code>Appointment</code> <strong>before</strong> we can specify<br>\nits relationship with <code>Patient</code>.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/assignments/134080?module_item_id=278760\">Many to Many Associations</a></li></ul><p></p>",
      "answers": [
        {
          "id": 2446,
          "text": "",
          "html": "<p>True</p>",
          "comments": "",
          "comments_html": "<p>Yes! The association with Appointment needs to be set up before we can set up\nan association <strong>through</strong> it. In other words, this code will not work:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Doctor</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span>\n  <span class=\"n\">has_many</span> <span class=\"ss\">:patients</span><span class=\"p\">,</span> <span class=\"ss\">through: :appointments</span>\n  <span class=\"n\">has_many</span> <span class=\"ss\">:appointments</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>But this will:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Doctor</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span>\n  <span class=\"n\">has_many</span> <span class=\"ss\">:appointments</span>\n  <span class=\"n\">has_many</span> <span class=\"ss\">:patients</span><span class=\"p\">,</span> <span class=\"ss\">through: :appointments</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "weight": 100.0
        },
        {
          "id": 8497,
          "text": "",
          "html": "<p>False</p>",
          "comments": "",
          "comments_html": "<p>Not quite! The association with Appointment needs to be set up before we can\nset up an association <strong>through</strong> it. In other words, this code will not work:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Doctor</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span>\n  <span class=\"n\">has_many</span> <span class=\"ss\">:patients</span><span class=\"p\">,</span> <span class=\"ss\">through: :appointments</span>\n  <span class=\"n\">has_many</span> <span class=\"ss\">:appointments</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>But this will:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Doctor</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span>\n  <span class=\"n\">has_many</span> <span class=\"ss\">:appointments</span>\n  <span class=\"n\">has_many</span> <span class=\"ss\">:patients</span><span class=\"p\">,</span> <span class=\"ss\">through: :appointments</span>\n<span class=\"k\">end</span>\n</code></pre></div>",
          "weight": 0.0
        },
        {
          "id": 6835,
          "text": "",
          "html": "<p>I don't know.</p>",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19076,
      "id": 149493,
      "quiz_group_id": null,
      "assessment_question_id": 185554,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_answers_question",
      "question_text": "<p>Say we have used Active Record to set up a many-to-many relationship among\n<code>Teacher</code>, <code>Student</code> and <code>Course</code> models, such that a teacher has many students\nthrough courses and vice versa.</p>\n\n<p>Given the following code in the <code>Teacher</code> model:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Teacher</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span>\n  <span class=\"n\">has_many</span> <span class=\"ss\">:courses</span>\n  <span class=\"n\">has_many</span> <span class=\"ss\">:students</span><span class=\"p\">,</span> <span class=\"ss\">through: :courses</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>What instance methods will be available on a teacher instance? Select all that\napply.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/assignments/74088\">Active Record Association Methods</a></li></ul><p></p>",
      "answers": [
        {
          "id": "3284",
          "text": "",
          "comments": "",
          "comments_html": "<p>Not quite. Remember, a teacher <strong>has many</strong> courses.</p>",
          "weight": 0.0,
          "html": "<p><code>#course</code></p>"
        },
        {
          "id": "338",
          "text": "",
          "comments": "",
          "comments_html": "<p>Yes! Using the <code>has_many :courses</code> method will create a <code>#courses</code> instance\nmethod.</p>",
          "weight": 100.0,
          "html": "<p><code>#courses</code></p>"
        },
        {
          "id": "3488",
          "text": "",
          "comments": "",
          "comments_html": "<p>Not quite. Remember, a teacher <strong>has many</strong> students.</p>",
          "weight": 0.0,
          "html": "<p><code>#student</code></p>"
        },
        {
          "id": "9409",
          "text": "",
          "comments": "",
          "comments_html": "<p>Yes! Using the <code>has_many :students</code> method will create a <code>#students</code> instance\nmethod.</p>",
          "weight": 100.0,
          "html": "<p><code>#students</code></p>"
        },
        {
          "id": "3817",
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "html": "<p><code>#teacher</code></p>"
        },
        {
          "id": "3214",
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "html": "<p><code>#teachers</code></p>"
        },
        {
          "id": "2085",
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "html": "<p>I don't know.</p>"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19076,
      "id": 149494,
      "quiz_group_id": null,
      "assessment_question_id": 185555,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_answers_question",
      "question_text": "<p>Say we have used Active Record to set up a many-to-many relationship among\n<code>Teacher</code>, <code>Student</code> and <code>Course</code> models, such that a teacher has many students\nthrough courses and vice versa.</p>\n\n<p>Given the following code in the <code>Student</code> model:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Student</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span>\n  <span class=\"n\">has_many</span> <span class=\"ss\">:courses</span>\n  <span class=\"n\">has_many</span> <span class=\"ss\">:teachers</span><span class=\"p\">,</span> <span class=\"ss\">through: :courses</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>What instance methods will be available on a student instance? Select all that\napply.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/assignments/74088\">Active Record Association Methods</a></li></ul><p></p>",
      "answers": [
        {
          "id": "9308",
          "text": "",
          "comments": "",
          "comments_html": "<p>Not quite. Remember, a student <strong>has many</strong> courses.</p>",
          "weight": 0.0,
          "html": "<p><code>#course</code></p>"
        },
        {
          "id": "5918",
          "text": "",
          "comments": "",
          "comments_html": "<p>Yes! Using the <code>has_many :courses</code> method will create a <code>#courses</code> instance\nmethod.</p>",
          "weight": 100.0,
          "html": "<p><code>#courses</code></p>"
        },
        {
          "id": "7644",
          "text": "",
          "comments": "",
          "comments_html": "<p>Not quite. Remember, a student <strong>has many</strong> teachers.</p>",
          "weight": 0.0,
          "html": "<p><code>#teacher</code></p>"
        },
        {
          "id": "2520",
          "text": "",
          "comments": "",
          "comments_html": "<p>Yes! Using the <code>has_many :teachers</code> method will create a <code>#teachers</code> instance\nmethod.</p>",
          "weight": 100.0,
          "html": "<p><code>#teachers</code></p>"
        },
        {
          "id": "5103",
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "html": "<p><code>#student</code></p>"
        },
        {
          "id": "6927",
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "html": "<p><code>#students</code></p>"
        },
        {
          "id": "6479",
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "html": "<p>I don't know.</p>"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    },
    {
      "quiz_id": 19076,
      "id": 149495,
      "quiz_group_id": null,
      "assessment_question_id": 185556,
      "position": null,
      "question_name": "Question",
      "question_type": "multiple_answers_question",
      "question_text": "<p>Say we have used Active Record to set up a many-to-many relationship among\n<code>Teacher</code>, <code>Student</code> and <code>Course</code> models, such that a teacher has many students\nthrough courses and vice versa.</p>\n\n<p>Given the following code in the <code>Course</code> model:</p>\n<div class=\"highlight\"><pre class=\"highlight ruby\"><code><span class=\"k\">class</span> <span class=\"nc\">Course</span> <span class=\"o\">&lt;</span> <span class=\"no\">ActiveRecord</span><span class=\"o\">::</span><span class=\"no\">Base</span>\n  <span class=\"n\">belongs_to</span> <span class=\"ss\">:student</span>\n  <span class=\"n\">belongs_to</span> <span class=\"ss\">:teacher</span>\n<span class=\"k\">end</span>\n</code></pre></div>\n<p>What instance methods will be available on a course instance? Select all that\napply.</p>",
      "points_possible": 1.0,
      "correct_comments": "",
      "incorrect_comments": "",
      "neutral_comments": "",
      "correct_comments_html": "",
      "incorrect_comments_html": "",
      "neutral_comments_html": "<p><strong>Source/s:</strong></p><ul><li><a href=\"https://learning.flatironschool.com/courses/3299/assignments/74088\">Active Record Association Methods</a></li></ul><p></p>",
      "answers": [
        {
          "id": "4022",
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "html": "<p><code>#course</code></p>"
        },
        {
          "id": "1544",
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "html": "<p><code>#courses</code></p>"
        },
        {
          "id": "7166",
          "text": "",
          "comments": "",
          "comments_html": "<p>Yes! Using the <code>belongs_to :student</code> method will create a <code>#student</code> instance\nmethod.</p>",
          "weight": 100.0,
          "html": "<p><code>#student</code></p>"
        },
        {
          "id": "8487",
          "text": "",
          "comments": "",
          "comments_html": "<p>Not quite. Remember, a course <strong>belongs to</strong> a student.</p>",
          "weight": 0.0,
          "html": "<p><code>#students</code></p>"
        },
        {
          "id": "7546",
          "text": "",
          "comments": "",
          "comments_html": "<p>Yes! Using the <code>belongs_to :teacher</code> method will create a <code>#teacher</code> instance\nmethod.</p>",
          "weight": 100.0,
          "html": "<p><code>#teacher</code></p>"
        },
        {
          "id": "5564",
          "text": "",
          "comments": "",
          "comments_html": "<p>Not quite. Remember, a course <strong>belongs to</strong> a teacher.</p>",
          "weight": 0.0,
          "html": "<p><code>#teachers</code></p>"
        },
        {
          "id": "514",
          "text": "",
          "comments": "",
          "comments_html": "<p>Be sure to study the source/s for this question. You'll get it next time.</p>",
          "weight": 0.0,
          "html": "<p>I don't know.</p>"
        }
      ],
      "variables": null,
      "formulas": null,
      "answer_tolerance": null,
      "formula_decimal_places": null,
      "matches": null,
      "matching_answer_incorrect_matches": null
    }
  ]
}